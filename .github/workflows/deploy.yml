name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:  # 支持手动触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Generate config.yaml
        run: |
          cp config/config.example.yaml config/config.yaml
          sed -i "s#ha_url:.*#ha_url: \"${{ secrets.HA_URL }}\"#" config/config.yaml
          sed -i "s#ha_token:.*#ha_token: \"${{ secrets.HA_TOKEN }}\"#" config/config.yaml
          sed -i "s#api_url:.*#api_url: \"${{ secrets.NOTIFY_API_URL }}\"#" config/config.yaml
          sed -i "s#api_token:.*#api_token: \"${{ secrets.NOTIFY_API_TOKEN }}\"#" config/config.yaml
          sed -i "s#topic_id:.*#topic_id: ${{ secrets.NOTIFY_TOPIC_ID }}#" config/config.yaml

      - name: Generate supervisor.conf
        run: |
          cp supervisor.conf supervisor.conf.tmp
          sed -i "s#command=.*#command=${{ secrets.DEPLOY_TARGET }}/ha-monitor -config ${{ secrets.DEPLOY_TARGET }}/config.yaml#" supervisor.conf.tmp
          sed -i "s#directory=.*#directory=${{ secrets.DEPLOY_TARGET }}#" supervisor.conf.tmp
          sed -i "s#user=.*#user=${{ secrets.DEPLOY_USER }}#" supervisor.conf.tmp
          mv supervisor.conf.tmp supervisor.conf

      - name: Build
        run: |
          GOOS=linux GOARCH=amd64 go build -o ha-monitor ./cmd/main.go

      - name: Deploy files
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          source: "ha-monitor,config.yaml,supervisor.conf"
          target: "${{ secrets.DEPLOY_TARGET }}"
          strip_components: 0

      - name: Setup service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            # 设置可执行权限
            chmod +x ${{ secrets.DEPLOY_TARGET }}/ha-monitor

            # 从supervisor配置中提取日志路径
            ERR_LOG=$(grep stderr_logfile supervisor.conf | cut -d= -f2 | tr -d ' ')
            OUT_LOG=$(grep stdout_logfile supervisor.conf | cut -d= -f2 | tr -d ' ')
            
            # 准备目录和文件
            sudo mkdir -p $(dirname $ERR_LOG)
            sudo mkdir -p $(dirname $OUT_LOG)

            sudo touch $ERR_LOG
            sudo touch $OUT_LOG

            sudo chown ${{ secrets.DEPLOY_USER }}:${{ secrets.DEPLOY_USER }} $ERR_LOG
            sudo chown ${{ secrets.DEPLOY_USER }}:${{ secrets.DEPLOY_USER }} $OUT_LOG
            
            sudo chmod 644 $ERR_LOG
            sudo chmod 644 $OUT_LOG

            # 移动 supervisor 配置文件并重命名
            sudo mv supervisor.conf /etc/supervisor/conf.d/ha-monitor.conf

            # 更新 supervisor 配置
            sudo supervisorctl update

            # 重启 supervisor 服务
            sudo supervisorctl restart ha-monitor